{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Desktop\\\\CP\\\\djr_auth_deep\\\\auth-client\\\\src\\\\pages\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { TextField, Button, Container, Typography, Box, Alert } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const {\n    requestPasswordReset\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setMessage(\"\");\n    const success = await requestPasswordReset(email);\n    if (success) {\n      setMessage(\"If an account with that email exists, we have sent a password reset link.\");\n      console;\n    } else {\n      setError(\"Failed to send reset email. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          width: \"100%\",\n          mt: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          width: \"100%\",\n          mt: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Send Reset Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          onClick: () => navigate(\"/login\"),\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"e+FtbcvB18o1cXqZ2C0sS3WE1GM=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["useState","useNavigate","useAuth","TextField","Button","Container","Typography","Box","Alert","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","message","setMessage","error","setError","requestPasswordReset","navigate","handleSubmit","e","preventDefault","success","console","maxWidth","children","sx","mt","display","flexDirection","alignItems","component","variant","fileName","_jsxFileName","lineNumber","columnNumber","severity","width","onSubmit","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","type","mb","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/Desktop/CP/djr_auth_deep/auth-client/src/pages/ForgotPassword.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Alert,\r\n} from \"@mui/material\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const { requestPasswordReset } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n\r\n    const success = await requestPasswordReset(email);\r\n    if (success) {\r\n      setMessage(\r\n        \"If an account with that email exists, we have sent a password reset link.\"\r\n      );\r\n      console\r\n    } else {\r\n      setError(\"Failed to send reset email. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Box\r\n        sx={{\r\n          mt: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Forgot Password\r\n        </Typography>\r\n        {message && (\r\n          <Alert severity=\"success\" sx={{ width: \"100%\", mt: 2 }}>\r\n            {message}\r\n          </Alert>\r\n        )}\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ width: \"100%\", mt: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Send Reset Link\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            onClick={() => navigate(\"/login\")}\r\n          >\r\n            Back to Login\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}