{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Desktop\\\\CP\\\\New folder\\\\auth-client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import { useAuth } from \"../context/AuthContext\";\n// import {\n//   TextField,\n//   Button,\n//   Container,\n//   Typography,\n//   Box,\n//   Alert,\n//   CircularProgress,\n//   Avatar,\n//   InputLabel,\n//   OutlinedInput,\n//   FormControl,\n//   InputAdornment,\n//   IconButton,\n// } from \"@mui/material\";\n// import { PhotoCamera, Visibility, VisibilityOff } from \"@mui/icons-material\";\n\n// const Register = () => {\n//   const [formData, setFormData] = useState({\n//     email: \"\",\n//     username: \"\",\n//     password: \"\",\n//     password2: \"\",\n//   });\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [image, setImage] = useState(null);\n//   const [previewImage, setPreviewImage] = useState(null);\n//   const [error, setError] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const { register } = useAuth();\n//   const navigate = useNavigate();\n\n//   const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n//   const handleMouseDownPassword = (event) => {\n//     event.preventDefault();\n//   };\n\n//   const handleMouseUpPassword = (event) => {\n//     event.preventDefault();\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleImageChange = (e) => {\n//     const selectedFile = e.target.files[0];\n//     if (selectedFile) {\n//       setImage(selectedFile);\n\n//       // Create a preview URL for the image\n//       const reader = new FileReader();\n//       reader.onloadend = () => {\n//         setPreviewImage(reader.result);\n//       };\n//       reader.readAsDataURL(selectedFile);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     setIsLoading(true);\n\n//     if (formData.password !== formData.password2) {\n//       setError(\"Passwords do not match\");\n//       setIsLoading(false);\n//       return;\n//     }\n\n//     try {\n//       // Create a FormData object to send both text fields and the image\n//       const submitData = new FormData();\n//       submitData.append(\"email\", formData.email);\n//       submitData.append(\"username\", formData.username);\n//       submitData.append(\"password\", formData.password);\n//       submitData.append(\"password2\", formData.password2);\n\n//       // Only append image if one was selected\n//       if (image) {\n//         submitData.append(\"image\", image);\n//       }\n\n//       const result = await register(submitData);\n//       if (result.success) {\n//         navigate(\"/verify-email\", { state: { email: formData.email } });\n//         console.log(\"Registration successful\", result);\n//       } else {\n//         console.log(\"Registration error:\", result.error);\n//         setError(\n//           result.error?.email?.[0] ||\n//             result.error?.username?.[0] ||\n//             result.error?.image?.[0] ||\n//             \"Registration failed. Please try again.\"\n//         );\n//       }\n//     } catch (err) {\n//       setError(\"An unexpected error occurred\");\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"xs\">\n//       <Box\n//         sx={{\n//           mt: 8,\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//         }}\n//       >\n//         <Typography component=\"h1\" variant=\"h5\">\n//           Sign up\n//         </Typography>\n\n//         {error && (\n//           <Alert severity=\"error\" sx={{ width: \"100%\", mt: 2 }}>\n//             {error}\n//           </Alert>\n//         )}\n\n//         {/* Regular Registration Form */}\n//         <Box\n//           component=\"form\"\n//           onSubmit={handleSubmit}\n//           sx={{ mt: 1, width: \"100%\" }}\n//         >\n//           {/* Profile Image Upload */}\n//           <Box\n//             sx={{\n//               display: \"flex\",\n//               flexDirection: \"column\",\n//               alignItems: \"center\",\n//               my: 2,\n//             }}\n//           >\n//             <Avatar\n//               src={previewImage}\n//               sx={{ width: 100, height: 100, mb: 1 }}\n//             />\n//             <InputLabel htmlFor=\"upload-image\">\n//               <input\n//                 accept=\"image/*\"\n//                 id=\"upload-image\"\n//                 type=\"file\"\n//                 style={{ display: \"none\" }}\n//                 onChange={handleImageChange}\n//               />\n//               <Button\n//                 variant=\"outlined\"\n//                 component=\"span\"\n//                 startIcon={<PhotoCamera />}\n//                 size=\"small\"\n//               >\n//                 Upload Profile Picture\n//               </Button>\n//             </InputLabel>\n//           </Box>\n\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             id=\"email\"\n//             label=\"Email Address\"\n//             name=\"email\"\n//             autoComplete=\"email\"\n//             autoFocus\n//             value={formData.email}\n//             onChange={handleChange}\n//           />\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             id=\"username\"\n//             label=\"Username\"\n//             name=\"username\"\n//             autoComplete=\"username\"\n//             value={formData.username}\n//             onChange={handleChange}\n//           />\n//           <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n//             <InputLabel htmlFor=\"outlined-adornment-password\">\n//               Password*\n//             </InputLabel>\n//             <OutlinedInput\n//               id=\"outlined-adornment-password\"\n//               type={showPassword ? \"text\" : \"password\"}\n//               value={formData.password}\n//               onChange={handleChange}\n//               name=\"password\"\n//               required\n//               fullWidth\n//               autoComplete=\"new-password\"\n//               margin=\"normal\"\n//               endAdornment={\n//                 <InputAdornment position=\"end\">\n//                   <IconButton\n//                     aria-label={\n//                       showPassword\n//                         ? \"hide the password\"\n//                         : \"display the password\"\n//                     }\n//                     onClick={handleClickShowPassword}\n//                     onMouseDown={handleMouseDownPassword}\n//                     onMouseUp={handleMouseUpPassword}\n//                     edge=\"end\"\n//                   >\n//                     {showPassword ? <VisibilityOff /> : <Visibility />}\n//                   </IconButton>\n//                 </InputAdornment>\n//               }\n//               label=\"Password\"\n//             />\n//           </FormControl>\n\n//           <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n//             <InputLabel htmlFor=\"outlined-adornment-password2\">\n//               Confirm Password*\n//             </InputLabel>\n//             <OutlinedInput\n//               id=\"outlined-adornment-password2\"\n//               type={showPassword ? \"text\" : \"password\"}\n//               value={formData.password2}\n//               onChange={handleChange}\n//               name=\"password2\"\n//               required\n//               fullWidth\n//               autoComplete=\"new-password\"\n//               margin=\"normal\"\n//               endAdornment={\n//                 <InputAdornment position=\"end\">\n//                   <IconButton\n//                     aria-label={\n//                       showPassword\n//                         ? \"hide the password\"\n//                         : \"display the password\"\n//                     }\n//                     onClick={handleClickShowPassword}\n//                     onMouseDown={handleMouseDownPassword}\n//                     onMouseUp={handleMouseUpPassword}\n//                     edge=\"end\"\n//                   >\n//                     {showPassword ? <VisibilityOff /> : <Visibility />}\n//                   </IconButton>\n//                 </InputAdornment>\n//               }\n//               label=\"Confirm Password\"\n//             />\n//           </FormControl>\n\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             sx={{ mt: 3, mb: 2 }}\n//             disabled={isLoading}\n//           >\n//             {isLoading ? (\n//               <>\n//                 <CircularProgress size={24} sx={{ mr: 1 }} color=\"inherit\" />\n//                 Signing Up...\n//               </>\n//             ) : (\n//               \"Sign Up\"\n//             )}\n//           </Button>\n//           <Box sx={{ textAlign: \"center\" }}>\n//             <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n//               <Typography variant=\"body2\" color=\"primary\">\n//                 Already have an account? Sign in\n//               </Typography>\n//             </Link>\n//           </Box>\n//         </Box>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default Register;\n\nimport { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { TextField, Button, Typography, Box, Alert, CircularProgress, Avatar, InputLabel, OutlinedInput, FormControl, InputAdornment, IconButton, Card, Zoom, CardContent, useTheme, Badge } from \"@mui/material\";\nimport { PhotoCamera, Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [image, setImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    register\n  } = useAuth();\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleImageChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setImage(selectedFile);\n\n      // Create a preview URL for the image\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreviewImage(reader.result);\n      };\n      reader.readAsDataURL(selectedFile);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n    if (formData.password !== formData.password2) {\n      setError(\"Passwords do not match\");\n      setIsLoading(false);\n      return;\n    }\n    try {\n      // Create a FormData object to send both text fields and the image\n      const submitData = new FormData();\n      submitData.append(\"email\", formData.email);\n      submitData.append(\"username\", formData.username);\n      submitData.append(\"password\", formData.password);\n      submitData.append(\"password2\", formData.password2);\n\n      // Only append image if one was selected\n      if (image) {\n        submitData.append(\"image\", image);\n      }\n      const result = await register(submitData);\n      if (result.success) {\n        navigate(\"/verify-email\", {\n          state: {\n            email: formData.email\n          }\n        });\n        console.log(\"Registration successful\", result);\n      } else {\n        var _result$error, _result$error$email, _result$error2, _result$error2$userna, _result$error3, _result$error3$image;\n        console.log(\"Registration error:\", result.error);\n        setError(((_result$error = result.error) === null || _result$error === void 0 ? void 0 : (_result$error$email = _result$error.email) === null || _result$error$email === void 0 ? void 0 : _result$error$email[0]) || ((_result$error2 = result.error) === null || _result$error2 === void 0 ? void 0 : (_result$error2$userna = _result$error2.username) === null || _result$error2$userna === void 0 ? void 0 : _result$error2$userna[0]) || ((_result$error3 = result.error) === null || _result$error3 === void 0 ? void 0 : (_result$error3$image = _result$error3.image) === null || _result$error3$image === void 0 ? void 0 : _result$error3$image[0]) || \"Registration failed. Please try again.\");\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred\");\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: \"100vh\",\n      background: \"linear-gradient(135deg,rgb(14, 26, 78) 0%,rgb(183, 132, 235) 100%)\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: 2\n    },\n    component: motion.div,\n    transition: {\n      duration: 0.6\n    },\n    children: /*#__PURE__*/_jsxDEV(Zoom, {\n      in: true,\n      timeout: 500,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 10,\n        sx: {\n          width: \"100%\",\n          maxWidth: 480,\n          overflow: \"hidden\",\n          transition: \"all 0.3s ease-in-out\",\n          \"&:hover\": {\n            boxShadow: \"0 10px 30px 1px rgb(20, 20, 20)\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            p: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h4\",\n              fontWeight: \"bold\",\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"text.secondary\",\n              children: \"Join our community today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSubmit,\n            sx: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                overlap: \"circular\",\n                anchorOrigin: {\n                  vertical: \"bottom\",\n                  horizontal: \"right\"\n                },\n                badgeContent: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"upload-photo\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    accept: \"image/*\",\n                    id: \"upload-photo\",\n                    type: \"file\",\n                    style: {\n                      display: \"none\"\n                    },\n                    onChange: handleImageChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    component: \"span\",\n                    sx: {\n                      bgcolor: \"primary.main\",\n                      color: \"white\",\n                      border: \"2px solid white\",\n                      \"&:hover\": {\n                        bgcolor: \"primary.dark\"\n                      },\n                      width: 36,\n                      height: 36\n                    },\n                    children: /*#__PURE__*/_jsxDEV(PhotoCamera, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 21\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: previewImage,\n                  sx: {\n                    width: 110,\n                    height: 110,\n                    border: \"3px solid white\",\n                    boxShadow: \"0 4px 10px rgba(0,0,0,0.15)\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1\n                },\n                children: \"Upload profile picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              sx: {\n                width: \"100%\",\n                mb: 3,\n                borderRadius: 2\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              autoFocus: true,\n              value: formData.email,\n              onChange: handleChange,\n              variant: \"outlined\",\n              sx: {\n                \"& .MuiOutlinedInput-root\": {\n                  borderRadius: 1\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"username\",\n              label: \"Username\",\n              name: \"username\",\n              autoComplete: \"username\",\n              value: formData.username,\n              onChange: handleChange,\n              variant: \"outlined\",\n              sx: {\n                mb: 2,\n                \"& .MuiOutlinedInput-root\": {\n                  borderRadius: 1\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              variant: \"outlined\",\n              sx: {\n                mb: 2,\n                \"& .MuiOutlinedInput-root\": {\n                  borderRadius: 1\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"outlined-adornment-password\",\n                children: \"Password*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                id: \"outlined-adornment-password\",\n                type: showPassword ? \"text\" : \"password\",\n                value: formData.password,\n                onChange: handleChange,\n                name: \"password\",\n                required: true,\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: handleClickShowPassword,\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 589,\n                      columnNumber: 41\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 589,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 21\n                }, this),\n                label: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              variant: \"outlined\",\n              sx: {\n                mb: 3,\n                \"& .MuiOutlinedInput-root\": {\n                  borderRadius: 1\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"outlined-adornment-password2\",\n                children: \"Confirm Password*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                id: \"outlined-adornment-password2\",\n                type: showPassword ? \"text\" : \"password\",\n                value: formData.password2,\n                onChange: handleChange,\n                name: \"password2\",\n                required: true,\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: handleClickShowPassword,\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 41\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 21\n                }, this),\n                label: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              disabled: isLoading,\n              sx: {\n                py: 1.5,\n                borderRadius: 1,\n                fontWeight: 600,\n                boxShadow: \"0 4px 14px rgba(0,0,0,0.15)\",\n                background: \"linear-gradient(90deg, #3f51b5 0%, #5c6bc0 100%)\",\n                \"&:hover\": {\n                  boxShadow: \"0 6px 20px rgba(0,0,0,0.2)\"\n                }\n              },\n              children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  sx: {\n                    mr: 1\n                  },\n                  color: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 21\n                }, this), \"Creating Account...\"]\n              }, void 0, true) : \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                textAlign: \"center\",\n                mt: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  style: {\n                    color: theme.palette.primary.main,\n                    textDecoration: \"none\",\n                    fontWeight: 500\n                  },\n                  children: \"Sign In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"ILzmQ8+g1LvitIPWscd8bCBAp7E=\", false, function () {\n  return [useAuth, useNavigate, useTheme];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useNavigate","Link","useAuth","TextField","Button","Typography","Box","Alert","CircularProgress","Avatar","InputLabel","OutlinedInput","FormControl","InputAdornment","IconButton","Card","Zoom","CardContent","useTheme","Badge","PhotoCamera","Visibility","VisibilityOff","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","formData","setFormData","email","username","password","password2","showPassword","setShowPassword","image","setImage","previewImage","setPreviewImage","error","setError","isLoading","setIsLoading","register","navigate","theme","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","handleChange","e","target","name","value","handleImageChange","selectedFile","files","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","submitData","FormData","append","success","state","console","log","_result$error","_result$error$email","_result$error2","_result$error2$userna","_result$error3","_result$error3$image","err","sx","height","background","display","alignItems","justifyContent","padding","component","div","transition","duration","children","in","timeout","elevation","width","maxWidth","overflow","boxShadow","p","flexDirection","mb","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","overlap","anchorOrigin","vertical","horizontal","badgeContent","htmlFor","accept","id","type","style","onChange","bgcolor","border","fontSize","src","mt","severity","borderRadius","margin","required","fullWidth","label","autoComplete","autoFocus","endAdornment","position","onClick","onMouseDown","edge","disabled","py","size","mr","textAlign","to","palette","primary","main","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/Desktop/CP/New folder/auth-client/src/pages/Register.js"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import { useAuth } from \"../context/AuthContext\";\r\n// import {\r\n//   TextField,\r\n//   Button,\r\n//   Container,\r\n//   Typography,\r\n//   Box,\r\n//   Alert,\r\n//   CircularProgress,\r\n//   Avatar,\r\n//   InputLabel,\r\n//   OutlinedInput,\r\n//   FormControl,\r\n//   InputAdornment,\r\n//   IconButton,\r\n// } from \"@mui/material\";\r\n// import { PhotoCamera, Visibility, VisibilityOff } from \"@mui/icons-material\";\r\n\r\n// const Register = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     email: \"\",\r\n//     username: \"\",\r\n//     password: \"\",\r\n//     password2: \"\",\r\n//   });\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n//   const [image, setImage] = useState(null);\r\n//   const [previewImage, setPreviewImage] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const { register } = useAuth();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n//   const handleMouseDownPassword = (event) => {\r\n//     event.preventDefault();\r\n//   };\r\n\r\n//   const handleMouseUpPassword = (event) => {\r\n//     event.preventDefault();\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const selectedFile = e.target.files[0];\r\n//     if (selectedFile) {\r\n//       setImage(selectedFile);\r\n\r\n//       // Create a preview URL for the image\r\n//       const reader = new FileReader();\r\n//       reader.onloadend = () => {\r\n//         setPreviewImage(reader.result);\r\n//       };\r\n//       reader.readAsDataURL(selectedFile);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n//     setIsLoading(true);\r\n\r\n//     if (formData.password !== formData.password2) {\r\n//       setError(\"Passwords do not match\");\r\n//       setIsLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       // Create a FormData object to send both text fields and the image\r\n//       const submitData = new FormData();\r\n//       submitData.append(\"email\", formData.email);\r\n//       submitData.append(\"username\", formData.username);\r\n//       submitData.append(\"password\", formData.password);\r\n//       submitData.append(\"password2\", formData.password2);\r\n\r\n//       // Only append image if one was selected\r\n//       if (image) {\r\n//         submitData.append(\"image\", image);\r\n//       }\r\n\r\n//       const result = await register(submitData);\r\n//       if (result.success) {\r\n//         navigate(\"/verify-email\", { state: { email: formData.email } });\r\n//         console.log(\"Registration successful\", result);\r\n//       } else {\r\n//         console.log(\"Registration error:\", result.error);\r\n//         setError(\r\n//           result.error?.email?.[0] ||\r\n//             result.error?.username?.[0] ||\r\n//             result.error?.image?.[0] ||\r\n//             \"Registration failed. Please try again.\"\r\n//         );\r\n//       }\r\n//     } catch (err) {\r\n//       setError(\"An unexpected error occurred\");\r\n//       console.error(err);\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"xs\">\r\n//       <Box\r\n//         sx={{\r\n//           mt: 8,\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//         }}\r\n//       >\r\n//         <Typography component=\"h1\" variant=\"h5\">\r\n//           Sign up\r\n//         </Typography>\r\n\r\n//         {error && (\r\n//           <Alert severity=\"error\" sx={{ width: \"100%\", mt: 2 }}>\r\n//             {error}\r\n//           </Alert>\r\n//         )}\r\n\r\n//         {/* Regular Registration Form */}\r\n//         <Box\r\n//           component=\"form\"\r\n//           onSubmit={handleSubmit}\r\n//           sx={{ mt: 1, width: \"100%\" }}\r\n//         >\r\n//           {/* Profile Image Upload */}\r\n//           <Box\r\n//             sx={{\r\n//               display: \"flex\",\r\n//               flexDirection: \"column\",\r\n//               alignItems: \"center\",\r\n//               my: 2,\r\n//             }}\r\n//           >\r\n//             <Avatar\r\n//               src={previewImage}\r\n//               sx={{ width: 100, height: 100, mb: 1 }}\r\n//             />\r\n//             <InputLabel htmlFor=\"upload-image\">\r\n//               <input\r\n//                 accept=\"image/*\"\r\n//                 id=\"upload-image\"\r\n//                 type=\"file\"\r\n//                 style={{ display: \"none\" }}\r\n//                 onChange={handleImageChange}\r\n//               />\r\n//               <Button\r\n//                 variant=\"outlined\"\r\n//                 component=\"span\"\r\n//                 startIcon={<PhotoCamera />}\r\n//                 size=\"small\"\r\n//               >\r\n//                 Upload Profile Picture\r\n//               </Button>\r\n//             </InputLabel>\r\n//           </Box>\r\n\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             id=\"email\"\r\n//             label=\"Email Address\"\r\n//             name=\"email\"\r\n//             autoComplete=\"email\"\r\n//             autoFocus\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             id=\"username\"\r\n//             label=\"Username\"\r\n//             name=\"username\"\r\n//             autoComplete=\"username\"\r\n//             value={formData.username}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n//             <InputLabel htmlFor=\"outlined-adornment-password\">\r\n//               Password*\r\n//             </InputLabel>\r\n//             <OutlinedInput\r\n//               id=\"outlined-adornment-password\"\r\n//               type={showPassword ? \"text\" : \"password\"}\r\n//               value={formData.password}\r\n//               onChange={handleChange}\r\n//               name=\"password\"\r\n//               required\r\n//               fullWidth\r\n//               autoComplete=\"new-password\"\r\n//               margin=\"normal\"\r\n//               endAdornment={\r\n//                 <InputAdornment position=\"end\">\r\n//                   <IconButton\r\n//                     aria-label={\r\n//                       showPassword\r\n//                         ? \"hide the password\"\r\n//                         : \"display the password\"\r\n//                     }\r\n//                     onClick={handleClickShowPassword}\r\n//                     onMouseDown={handleMouseDownPassword}\r\n//                     onMouseUp={handleMouseUpPassword}\r\n//                     edge=\"end\"\r\n//                   >\r\n//                     {showPassword ? <VisibilityOff /> : <Visibility />}\r\n//                   </IconButton>\r\n//                 </InputAdornment>\r\n//               }\r\n//               label=\"Password\"\r\n//             />\r\n//           </FormControl>\r\n\r\n//           <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n//             <InputLabel htmlFor=\"outlined-adornment-password2\">\r\n//               Confirm Password*\r\n//             </InputLabel>\r\n//             <OutlinedInput\r\n//               id=\"outlined-adornment-password2\"\r\n//               type={showPassword ? \"text\" : \"password\"}\r\n//               value={formData.password2}\r\n//               onChange={handleChange}\r\n//               name=\"password2\"\r\n//               required\r\n//               fullWidth\r\n//               autoComplete=\"new-password\"\r\n//               margin=\"normal\"\r\n//               endAdornment={\r\n//                 <InputAdornment position=\"end\">\r\n//                   <IconButton\r\n//                     aria-label={\r\n//                       showPassword\r\n//                         ? \"hide the password\"\r\n//                         : \"display the password\"\r\n//                     }\r\n//                     onClick={handleClickShowPassword}\r\n//                     onMouseDown={handleMouseDownPassword}\r\n//                     onMouseUp={handleMouseUpPassword}\r\n//                     edge=\"end\"\r\n//                   >\r\n//                     {showPassword ? <VisibilityOff /> : <Visibility />}\r\n//                   </IconButton>\r\n//                 </InputAdornment>\r\n//               }\r\n//               label=\"Confirm Password\"\r\n//             />\r\n//           </FormControl>\r\n\r\n//           <Button\r\n//             type=\"submit\"\r\n//             fullWidth\r\n//             variant=\"contained\"\r\n//             sx={{ mt: 3, mb: 2 }}\r\n//             disabled={isLoading}\r\n//           >\r\n//             {isLoading ? (\r\n//               <>\r\n//                 <CircularProgress size={24} sx={{ mr: 1 }} color=\"inherit\" />\r\n//                 Signing Up...\r\n//               </>\r\n//             ) : (\r\n//               \"Sign Up\"\r\n//             )}\r\n//           </Button>\r\n//           <Box sx={{ textAlign: \"center\" }}>\r\n//             <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n//               <Typography variant=\"body2\" color=\"primary\">\r\n//                 Already have an account? Sign in\r\n//               </Typography>\r\n//             </Link>\r\n//           </Box>\r\n//         </Box>\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\nimport { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Alert,\r\n  CircularProgress,\r\n  Avatar,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  FormControl,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  Zoom,\r\n  CardContent,\r\n  useTheme,\r\n  Badge,\r\n} from \"@mui/material\";\r\nimport { PhotoCamera, Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { motion } from \"framer-motion\";\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const [previewImage, setPreviewImage] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { register } = useAuth();\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      setImage(selectedFile);\r\n\r\n      // Create a preview URL for the image\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreviewImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(selectedFile);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    if (formData.password !== formData.password2) {\r\n      setError(\"Passwords do not match\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Create a FormData object to send both text fields and the image\r\n      const submitData = new FormData();\r\n      submitData.append(\"email\", formData.email);\r\n      submitData.append(\"username\", formData.username);\r\n      submitData.append(\"password\", formData.password);\r\n      submitData.append(\"password2\", formData.password2);\r\n\r\n      // Only append image if one was selected\r\n      if (image) {\r\n        submitData.append(\"image\", image);\r\n      }\r\n\r\n      const result = await register(submitData);\r\n      if (result.success) {\r\n        navigate(\"/verify-email\", { state: { email: formData.email } });\r\n        console.log(\"Registration successful\", result);\r\n      } else {\r\n        console.log(\"Registration error:\", result.error);\r\n        setError(\r\n          result.error?.email?.[0] ||\r\n            result.error?.username?.[0] ||\r\n            result.error?.image?.[0] ||\r\n            \"Registration failed. Please try again.\"\r\n        );\r\n      }\r\n    } catch (err) {\r\n      setError(\"An unexpected error occurred\");\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: \"100vh\",\r\n        background:\r\n          \"linear-gradient(135deg,rgb(14, 26, 78) 0%,rgb(183, 132, 235) 100%)\",\r\n        display: \"flex\",\r\n\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: 2,\r\n      }}\r\n      component={motion.div}\r\n      transition={{ duration: 0.6 }}\r\n    >\r\n      <Zoom in={true} timeout={500}>\r\n        <Card\r\n          elevation={10}\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 480,\r\n            overflow: \"hidden\",\r\n            transition: \"all 0.3s ease-in-out\",\r\n            \"&:hover\": {\r\n              boxShadow: \"0 10px 30px 1px rgb(20, 20, 20)\",\r\n            },\r\n          }}\r\n        >\r\n          <CardContent sx={{ p: 4 }}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                mb: 3,\r\n              }}\r\n            >\r\n              <Typography component=\"h1\" variant=\"h4\" fontWeight=\"bold\">\r\n                Create Account\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                Join our community today\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box\r\n              component=\"form\"\r\n              onSubmit={handleSubmit}\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              {/* Profile Image Upload */}\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  mb: 1,\r\n                }}\r\n              >\r\n                <Badge\r\n                  overlap=\"circular\"\r\n                  anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n                  badgeContent={\r\n                    <label htmlFor=\"upload-photo\">\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        id=\"upload-photo\"\r\n                        type=\"file\"\r\n                        style={{ display: \"none\" }}\r\n                        onChange={handleImageChange}\r\n                      />\r\n                      <IconButton\r\n                        component=\"span\"\r\n                        sx={{\r\n                          bgcolor: \"primary.main\",\r\n                          color: \"white\",\r\n                          border: \"2px solid white\",\r\n                          \"&:hover\": { bgcolor: \"primary.dark\" },\r\n                          width: 36,\r\n                          height: 36,\r\n                        }}\r\n                      >\r\n                        <PhotoCamera fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </label>\r\n                  }\r\n                >\r\n                  <Avatar\r\n                    src={previewImage}\r\n                    sx={{\r\n                      width: 110,\r\n                      height: 110,\r\n                      border: \"3px solid white\",\r\n                      boxShadow: \"0 4px 10px rgba(0,0,0,0.15)\",\r\n                    }}\r\n                  />\r\n                </Badge>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  color=\"text.secondary\"\r\n                  sx={{ mt: 1 }}\r\n                >\r\n                  Upload profile picture\r\n                </Typography>\r\n              </Box>\r\n              {error && (\r\n                <Alert\r\n                  severity=\"error\"\r\n                  sx={{\r\n                    width: \"100%\",\r\n                    mb: 3,\r\n                    borderRadius: 2,\r\n                  }}\r\n                >\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: 1,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                value={formData.username}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  mb: 2,\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: 1,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <FormControl\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  mb: 2,\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: 1,\r\n                  },\r\n                }}\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Password*\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={formData.password}\r\n                  onChange={handleChange}\r\n                  name=\"password\"\r\n                  required\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  label=\"Password\"\r\n                />\r\n              </FormControl>\r\n\r\n              <FormControl\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  mb: 3,\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    borderRadius: 1,\r\n                  },\r\n                }}\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password2\">\r\n                  Confirm Password*\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password2\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={formData.password2}\r\n                  onChange={handleChange}\r\n                  name=\"password2\"\r\n                  required\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  label=\"Confirm Password\"\r\n                />\r\n              </FormControl>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                disabled={isLoading}\r\n                sx={{\r\n                  py: 1.5,\r\n                  borderRadius: 1,\r\n                  fontWeight: 600,\r\n                  boxShadow: \"0 4px 14px rgba(0,0,0,0.15)\",\r\n                  background:\r\n                    \"linear-gradient(90deg, #3f51b5 0%, #5c6bc0 100%)\",\r\n                  \"&:hover\": {\r\n                    boxShadow: \"0 6px 20px rgba(0,0,0,0.2)\",\r\n                  },\r\n                }}\r\n              >\r\n                {isLoading ? (\r\n                  <>\r\n                    <CircularProgress\r\n                      size={24}\r\n                      sx={{ mr: 1 }}\r\n                      color=\"inherit\"\r\n                    />\r\n                    Creating Account...\r\n                  </>\r\n                ) : (\r\n                  \"Create Account\"\r\n                )}\r\n              </Button>\r\n\r\n              <Box sx={{ textAlign: \"center\", mt: 3 }}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Already have an account?{\" \"}\r\n                  <Link\r\n                    to=\"/login\"\r\n                    style={{\r\n                      color: theme.palette.primary.main,\r\n                      textDecoration: \"none\",\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    Sign In\r\n                  </Link>\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Zoom>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SACEC,SAAS,EACTC,MAAM,EACNC,UAAU,EACVC,GAAG,EACHC,KAAK,EACLC,gBAAgB,EAChBC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,WAAW,EACXC,cAAc,EACdC,UAAU,EACVC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,QAAQ,EACRC,KAAK,QACA,eAAe;AACtB,SAASC,WAAW,EAAEC,UAAU,EAAEC,aAAa,QAAQ,qBAAqB;AAC5E,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC;IACvCiC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuC,KAAK,EAAEC,QAAQ,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6C,SAAS,EAAEC,YAAY,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAE+C;EAAS,CAAC,GAAG5C,OAAO,CAAC,CAAC;EAC9B,MAAM6C,QAAQ,GAAG/C,WAAW,CAAC,CAAC;EAC9B,MAAMgD,KAAK,GAAG9B,QAAQ,CAAC,CAAC;EAExB,MAAM+B,uBAAuB,GAAGA,CAAA,KAAMZ,eAAe,CAAEa,IAAI,IAAK,CAACA,IAAI,CAAC;EAEtE,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;IACzCA,KAAK,CAACC,cAAc,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BxB,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACyB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAIJ,CAAC,IAAK;IAC/B,MAAMK,YAAY,GAAGL,CAAC,CAACC,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC;IACtC,IAAID,YAAY,EAAE;MAChBrB,QAAQ,CAACqB,YAAY,CAAC;;MAEtB;MACA,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvBvB,eAAe,CAACqB,MAAM,CAACG,MAAM,CAAC;MAChC,CAAC;MACDH,MAAM,CAACI,aAAa,CAACN,YAAY,CAAC;IACpC;EACF,CAAC;EAED,MAAMO,YAAY,GAAG,MAAOZ,CAAC,IAAK;IAChCA,CAAC,CAACF,cAAc,CAAC,CAAC;IAClBV,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAIf,QAAQ,CAACI,QAAQ,KAAKJ,QAAQ,CAACK,SAAS,EAAE;MAC5CQ,QAAQ,CAAC,wBAAwB,CAAC;MAClCE,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;IAEA,IAAI;MACF;MACA,MAAMuB,UAAU,GAAG,IAAIC,QAAQ,CAAC,CAAC;MACjCD,UAAU,CAACE,MAAM,CAAC,OAAO,EAAExC,QAAQ,CAACE,KAAK,CAAC;MAC1CoC,UAAU,CAACE,MAAM,CAAC,UAAU,EAAExC,QAAQ,CAACG,QAAQ,CAAC;MAChDmC,UAAU,CAACE,MAAM,CAAC,UAAU,EAAExC,QAAQ,CAACI,QAAQ,CAAC;MAChDkC,UAAU,CAACE,MAAM,CAAC,WAAW,EAAExC,QAAQ,CAACK,SAAS,CAAC;;MAElD;MACA,IAAIG,KAAK,EAAE;QACT8B,UAAU,CAACE,MAAM,CAAC,OAAO,EAAEhC,KAAK,CAAC;MACnC;MAEA,MAAM2B,MAAM,GAAG,MAAMnB,QAAQ,CAACsB,UAAU,CAAC;MACzC,IAAIH,MAAM,CAACM,OAAO,EAAE;QAClBxB,QAAQ,CAAC,eAAe,EAAE;UAAEyB,KAAK,EAAE;YAAExC,KAAK,EAAEF,QAAQ,CAACE;UAAM;QAAE,CAAC,CAAC;QAC/DyC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAET,MAAM,CAAC;MAChD,CAAC,MAAM;QAAA,IAAAU,aAAA,EAAAC,mBAAA,EAAAC,cAAA,EAAAC,qBAAA,EAAAC,cAAA,EAAAC,oBAAA;QACLP,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAET,MAAM,CAACvB,KAAK,CAAC;QAChDC,QAAQ,CACN,EAAAgC,aAAA,GAAAV,MAAM,CAACvB,KAAK,cAAAiC,aAAA,wBAAAC,mBAAA,GAAZD,aAAA,CAAc3C,KAAK,cAAA4C,mBAAA,uBAAnBA,mBAAA,CAAsB,CAAC,CAAC,OAAAC,cAAA,GACtBZ,MAAM,CAACvB,KAAK,cAAAmC,cAAA,wBAAAC,qBAAA,GAAZD,cAAA,CAAc5C,QAAQ,cAAA6C,qBAAA,uBAAtBA,qBAAA,CAAyB,CAAC,CAAC,OAAAC,cAAA,GAC3Bd,MAAM,CAACvB,KAAK,cAAAqC,cAAA,wBAAAC,oBAAA,GAAZD,cAAA,CAAczC,KAAK,cAAA0C,oBAAA,uBAAnBA,oBAAA,CAAsB,CAAC,CAAC,KACxB,wCACJ,CAAC;MACH;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZtC,QAAQ,CAAC,8BAA8B,CAAC;MACxC8B,OAAO,CAAC/B,KAAK,CAACuC,GAAG,CAAC;IACpB,CAAC,SAAS;MACRpC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEpB,OAAA,CAACnB,GAAG;IACF4E,EAAE,EAAE;MACFC,MAAM,EAAE,OAAO;MACfC,UAAU,EACR,oEAAoE;MACtEC,OAAO,EAAE,MAAM;MAEfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,OAAO,EAAE;IACX,CAAE;IACFC,SAAS,EAAElE,MAAM,CAACmE,GAAI;IACtBC,UAAU,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAE;IAAAC,QAAA,eAE9BpE,OAAA,CAACT,IAAI;MAAC8E,EAAE,EAAE,IAAK;MAACC,OAAO,EAAE,GAAI;MAAAF,QAAA,eAC3BpE,OAAA,CAACV,IAAI;QACHiF,SAAS,EAAE,EAAG;QACdd,EAAE,EAAE;UACFe,KAAK,EAAE,MAAM;UACbC,QAAQ,EAAE,GAAG;UACbC,QAAQ,EAAE,QAAQ;UAClBR,UAAU,EAAE,sBAAsB;UAClC,SAAS,EAAE;YACTS,SAAS,EAAE;UACb;QACF,CAAE;QAAAP,QAAA,eAEFpE,OAAA,CAACR,WAAW;UAACiE,EAAE,EAAE;YAAEmB,CAAC,EAAE;UAAE,CAAE;UAAAR,QAAA,gBACxBpE,OAAA,CAACnB,GAAG;YACF4E,EAAE,EAAE;cACFG,OAAO,EAAE,MAAM;cACfiB,aAAa,EAAE,QAAQ;cACvBhB,UAAU,EAAE,QAAQ;cACpBiB,EAAE,EAAE;YACN,CAAE;YAAAV,QAAA,gBAEFpE,OAAA,CAACpB,UAAU;cAACoF,SAAS,EAAC,IAAI;cAACe,OAAO,EAAC,IAAI;cAACC,UAAU,EAAC,MAAM;cAAAZ,QAAA,EAAC;YAE1D;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbpF,OAAA,CAACpB,UAAU;cAACmG,OAAO,EAAC,WAAW;cAACM,KAAK,EAAC,gBAAgB;cAAAjB,QAAA,EAAC;YAEvD;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAENpF,OAAA,CAACnB,GAAG;YACFmF,SAAS,EAAC,MAAM;YAChBsB,QAAQ,EAAE5C,YAAa;YACvBe,EAAE,EAAE;cAAEe,KAAK,EAAE;YAAO,CAAE;YAAAJ,QAAA,gBAGtBpE,OAAA,CAACnB,GAAG;cACF4E,EAAE,EAAE;gBACFG,OAAO,EAAE,MAAM;gBACfiB,aAAa,EAAE,QAAQ;gBACvBhB,UAAU,EAAE,QAAQ;gBACpBiB,EAAE,EAAE;cACN,CAAE;cAAAV,QAAA,gBAEFpE,OAAA,CAACN,KAAK;gBACJ6F,OAAO,EAAC,UAAU;gBAClBC,YAAY,EAAE;kBAAEC,QAAQ,EAAE,QAAQ;kBAAEC,UAAU,EAAE;gBAAQ,CAAE;gBAC1DC,YAAY,eACV3F,OAAA;kBAAO4F,OAAO,EAAC,cAAc;kBAAAxB,QAAA,gBAC3BpE,OAAA;oBACE6F,MAAM,EAAC,SAAS;oBAChBC,EAAE,EAAC,cAAc;oBACjBC,IAAI,EAAC,MAAM;oBACXC,KAAK,EAAE;sBAAEpC,OAAO,EAAE;oBAAO,CAAE;oBAC3BqC,QAAQ,EAAE/D;kBAAkB;oBAAA+C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7B,CAAC,eACFpF,OAAA,CAACX,UAAU;oBACT2E,SAAS,EAAC,MAAM;oBAChBP,EAAE,EAAE;sBACFyC,OAAO,EAAE,cAAc;sBACvBb,KAAK,EAAE,OAAO;sBACdc,MAAM,EAAE,iBAAiB;sBACzB,SAAS,EAAE;wBAAED,OAAO,EAAE;sBAAe,CAAC;sBACtC1B,KAAK,EAAE,EAAE;sBACTd,MAAM,EAAE;oBACV,CAAE;oBAAAU,QAAA,eAEFpE,OAAA,CAACL,WAAW;sBAACyG,QAAQ,EAAC;oBAAO;sBAAAnB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR,CACR;gBAAAhB,QAAA,eAEDpE,OAAA,CAAChB,MAAM;kBACLqH,GAAG,EAAEtF,YAAa;kBAClB0C,EAAE,EAAE;oBACFe,KAAK,EAAE,GAAG;oBACVd,MAAM,EAAE,GAAG;oBACXyC,MAAM,EAAE,iBAAiB;oBACzBxB,SAAS,EAAE;kBACb;gBAAE;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC,eACRpF,OAAA,CAACpB,UAAU;gBACTmG,OAAO,EAAC,SAAS;gBACjBM,KAAK,EAAC,gBAAgB;gBACtB5B,EAAE,EAAE;kBAAE6C,EAAE,EAAE;gBAAE,CAAE;gBAAAlC,QAAA,EACf;cAED;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,EACLnE,KAAK,iBACJjB,OAAA,CAAClB,KAAK;cACJyH,QAAQ,EAAC,OAAO;cAChB9C,EAAE,EAAE;gBACFe,KAAK,EAAE,MAAM;gBACbM,EAAE,EAAE,CAAC;gBACL0B,YAAY,EAAE;cAChB,CAAE;cAAApC,QAAA,EAEDnD;YAAK;cAAAgE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACR,eACDpF,OAAA,CAACtB,SAAS;cACR+H,MAAM,EAAC,QAAQ;cACfC,QAAQ;cACRC,SAAS;cACTb,EAAE,EAAC,OAAO;cACVc,KAAK,EAAC,eAAe;cACrB5E,IAAI,EAAC,OAAO;cACZ6E,YAAY,EAAC,OAAO;cACpBC,SAAS;cACT7E,KAAK,EAAE5B,QAAQ,CAACE,KAAM;cACtB0F,QAAQ,EAAEpE,YAAa;cACvBkD,OAAO,EAAC,UAAU;cAClBtB,EAAE,EAAE;gBACF,0BAA0B,EAAE;kBAC1B+C,YAAY,EAAE;gBAChB;cACF;YAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAEFpF,OAAA,CAACtB,SAAS;cACR+H,MAAM,EAAC,QAAQ;cACfC,QAAQ;cACRC,SAAS;cACTb,EAAE,EAAC,UAAU;cACbc,KAAK,EAAC,UAAU;cAChB5E,IAAI,EAAC,UAAU;cACf6E,YAAY,EAAC,UAAU;cACvB5E,KAAK,EAAE5B,QAAQ,CAACG,QAAS;cACzByF,QAAQ,EAAEpE,YAAa;cACvBkD,OAAO,EAAC,UAAU;cAClBtB,EAAE,EAAE;gBACFqB,EAAE,EAAE,CAAC;gBACL,0BAA0B,EAAE;kBAC1B0B,YAAY,EAAE;gBAChB;cACF;YAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAEFpF,OAAA,CAACb,WAAW;cACVwH,SAAS;cACT5B,OAAO,EAAC,UAAU;cAClBtB,EAAE,EAAE;gBACFqB,EAAE,EAAE,CAAC;gBACL,0BAA0B,EAAE;kBAC1B0B,YAAY,EAAE;gBAChB;cACF,CAAE;cAAApC,QAAA,gBAEFpE,OAAA,CAACf,UAAU;gBAAC2G,OAAO,EAAC,6BAA6B;gBAAAxB,QAAA,EAAC;cAElD;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbpF,OAAA,CAACd,aAAa;gBACZ4G,EAAE,EAAC,6BAA6B;gBAChCC,IAAI,EAAEpF,YAAY,GAAG,MAAM,GAAG,UAAW;gBACzCsB,KAAK,EAAE5B,QAAQ,CAACI,QAAS;gBACzBwF,QAAQ,EAAEpE,YAAa;gBACvBG,IAAI,EAAC,UAAU;gBACf0E,QAAQ;gBACRK,YAAY,eACV/G,OAAA,CAACZ,cAAc;kBAAC4H,QAAQ,EAAC,KAAK;kBAAA5C,QAAA,eAC5BpE,OAAA,CAACX,UAAU;oBACT,cAAW,4BAA4B;oBACvC4H,OAAO,EAAEzF,uBAAwB;oBACjC0F,WAAW,EAAExF,uBAAwB;oBACrCyF,IAAI,EAAC,KAAK;oBAAA/C,QAAA,EAETzD,YAAY,gBAAGX,OAAA,CAACH,aAAa;sBAAAoF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,gBAAGpF,OAAA,CAACJ,UAAU;sBAAAqF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CACjB;gBACDwB,KAAK,EAAC;cAAU;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACS,CAAC,eAEdpF,OAAA,CAACb,WAAW;cACVwH,SAAS;cACT5B,OAAO,EAAC,UAAU;cAClBtB,EAAE,EAAE;gBACFqB,EAAE,EAAE,CAAC;gBACL,0BAA0B,EAAE;kBAC1B0B,YAAY,EAAE;gBAChB;cACF,CAAE;cAAApC,QAAA,gBAEFpE,OAAA,CAACf,UAAU;gBAAC2G,OAAO,EAAC,8BAA8B;gBAAAxB,QAAA,EAAC;cAEnD;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbpF,OAAA,CAACd,aAAa;gBACZ4G,EAAE,EAAC,8BAA8B;gBACjCC,IAAI,EAAEpF,YAAY,GAAG,MAAM,GAAG,UAAW;gBACzCsB,KAAK,EAAE5B,QAAQ,CAACK,SAAU;gBAC1BuF,QAAQ,EAAEpE,YAAa;gBACvBG,IAAI,EAAC,WAAW;gBAChB0E,QAAQ;gBACRK,YAAY,eACV/G,OAAA,CAACZ,cAAc;kBAAC4H,QAAQ,EAAC,KAAK;kBAAA5C,QAAA,eAC5BpE,OAAA,CAACX,UAAU;oBACT,cAAW,4BAA4B;oBACvC4H,OAAO,EAAEzF,uBAAwB;oBACjC0F,WAAW,EAAExF,uBAAwB;oBACrCyF,IAAI,EAAC,KAAK;oBAAA/C,QAAA,EAETzD,YAAY,gBAAGX,OAAA,CAACH,aAAa;sBAAAoF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,gBAAGpF,OAAA,CAACJ,UAAU;sBAAAqF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CACjB;gBACDwB,KAAK,EAAC;cAAkB;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACS,CAAC,eAEdpF,OAAA,CAACrB,MAAM;cACLoH,IAAI,EAAC,QAAQ;cACbY,SAAS;cACT5B,OAAO,EAAC,WAAW;cACnBqC,QAAQ,EAAEjG,SAAU;cACpBsC,EAAE,EAAE;gBACF4D,EAAE,EAAE,GAAG;gBACPb,YAAY,EAAE,CAAC;gBACfxB,UAAU,EAAE,GAAG;gBACfL,SAAS,EAAE,6BAA6B;gBACxChB,UAAU,EACR,kDAAkD;gBACpD,SAAS,EAAE;kBACTgB,SAAS,EAAE;gBACb;cACF,CAAE;cAAAP,QAAA,EAEDjD,SAAS,gBACRnB,OAAA,CAAAE,SAAA;gBAAAkE,QAAA,gBACEpE,OAAA,CAACjB,gBAAgB;kBACfuI,IAAI,EAAE,EAAG;kBACT7D,EAAE,EAAE;oBAAE8D,EAAE,EAAE;kBAAE,CAAE;kBACdlC,KAAK,EAAC;gBAAS;kBAAAJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChB,CAAC,uBAEJ;cAAA,eAAE,CAAC,GAEH;YACD;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC,eAETpF,OAAA,CAACnB,GAAG;cAAC4E,EAAE,EAAE;gBAAE+D,SAAS,EAAE,QAAQ;gBAAElB,EAAE,EAAE;cAAE,CAAE;cAAAlC,QAAA,eACtCpE,OAAA,CAACpB,UAAU;gBAACmG,OAAO,EAAC,OAAO;gBAACM,KAAK,EAAC,gBAAgB;gBAAAjB,QAAA,GAAC,0BACzB,EAAC,GAAG,eAC5BpE,OAAA,CAACxB,IAAI;kBACHiJ,EAAE,EAAC,QAAQ;kBACXzB,KAAK,EAAE;oBACLX,KAAK,EAAE9D,KAAK,CAACmG,OAAO,CAACC,OAAO,CAACC,IAAI;oBACjCC,cAAc,EAAE,MAAM;oBACtB7C,UAAU,EAAE;kBACd,CAAE;kBAAAZ,QAAA,EACH;gBAED;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChF,EAAA,CA/WID,QAAQ;EAAA,QAYS1B,OAAO,EACXF,WAAW,EACdkB,QAAQ;AAAA;AAAAqI,EAAA,GAdlB3H,QAAQ;AAiXd,eAAeA,QAAQ;AAAC,IAAA2H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}