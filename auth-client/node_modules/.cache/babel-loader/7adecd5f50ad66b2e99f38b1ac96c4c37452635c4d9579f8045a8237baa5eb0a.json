{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Desktop\\\\CP\\\\djr_auth_deep\\\\auth-client\\\\src\\\\pages\\\\VerifyEmail.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n// import { useNavigate, useSearchParams } from \"react-router-dom\";\n// import { useAuth } from \"../context/AuthContext\";\n// import {\n//   Container,\n//   Typography,\n//   Box,\n//   Button,\n//   CircularProgress,\n//   Alert,\n// } from \"@mui/material\";\n\n// const VerifyEmail = () => {\n//   const [searchParams] = useSearchParams();\n//   const token = searchParams.get(\"token\");\n//   const [status, setStatus] = useState(\"verifying\");\n//   const [error, setError] = useState(\"\");\n//   const { verifyEmail } = useAuth();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const verifyToken = async () => {\n//       try {\n//         const success = await verifyEmail(token);\n//         if (success) {\n//           setStatus(\"verified\");\n//         } else {\n//           setStatus(\"failed\");\n//           setError(\n//             \"Email verification failed. The link may be invalid or expired.\"\n//           );\n//         }\n//       } catch (err) {\n//         setStatus(\"failed\");\n//         setError(\"An error occurred during verification.\");\n//       }\n//     };\n\n//     if (token) {\n//       verifyToken();\n//     } else {\n//       setStatus(\"no-token\");\n//     }\n//   }, [token, verifyEmail]);\n\n//   if (status === \"verifying\") {\n//     return (\n//       <Container maxWidth=\"sm\">\n//         <Box\n//           sx={{\n//             mt: 8,\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             alignItems: \"center\",\n//           }}\n//         >\n//           <CircularProgress />\n//           <Typography variant=\"h6\" sx={{ mt: 2 }}>\n//             Verifying your email...\n//           </Typography>\n//         </Box>\n//       </Container>\n//     );\n//   }\n\n//   if (status === \"no-token\") {\n//     return (\n//       <Container maxWidth=\"sm\">\n//         <Box\n//           sx={{\n//             mt: 8,\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             alignItems: \"center\",\n//           }}\n//         >\n//           <Typography variant=\"h6\" sx={{ mt: 2 }}>\n//             No verification token provided.\n//           </Typography>\n//           <Button\n//             variant=\"contained\"\n//             sx={{ mt: 2 }}\n//             onClick={() => navigate(\"/login\")}\n//           >\n//             Go to Login\n//           </Button>\n//         </Box>\n//       </Container>\n//     );\n//   }\n\n//   return (\n//     <Container maxWidth=\"sm\">\n//       <Box\n//         sx={{\n//           mt: 8,\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//         }}\n//       >\n//         {status === \"verified\" ? (\n//           <>\n//             <Typography variant=\"h5\" sx={{ mt: 2 }}>\n//               Email Verified Successfully!\n//             </Typography>\n//             <Typography variant=\"body1\" sx={{ mt: 2 }}>\n//               Your email has been verified. You can now log in to your account.\n//             </Typography>\n//             <Button\n//               variant=\"contained\"\n//               sx={{ mt: 3 }}\n//               onClick={() => navigate(\"/login\")}\n//             >\n//               Go to Login\n//             </Button>\n//           </>\n//         ) : (\n//           <>\n//             <Typography variant=\"h5\" color=\"error\" sx={{ mt: 2 }}>\n//               Verification Failed\n//             </Typography>\n//             {error && (\n//               <Alert severity=\"error\" sx={{ mt: 2, width: \"100%\" }}>\n//                 {error}\n//               </Alert>\n//             )}\n//             <Button\n//               variant=\"contained\"\n//               sx={{ mt: 3 }}\n//               onClick={() => navigate(\"/login\")}\n//             >\n//               Go to Login\n//             </Button>\n//           </>\n//         )}\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default VerifyEmail;\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { TextField, Button, Container, Typography, Box, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const {\n    verifyEmail\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setMessage('');\n    const success = await verifyEmail(email, code);\n    if (success) {\n      console.log('Email verified successfully!', success);\n      setMessage('Email verified successfully! Redirecting to login...');\n      setTimeout(() => navigate('/login'), 2000);\n    } else {\n      setError('Verification failed. Please check your code and try again.');\n      setError('Verification failed. Please check your code and try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Verify Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          width: '100%',\n          mt: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          width: '100%',\n          mt: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"code\",\n          label: \"Verification Code\",\n          type: \"text\",\n          inputProps: {\n            maxLength: 6\n          },\n          value: code,\n          onChange: e => setCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Verify Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n_s(VerifyEmail, \"y9V/L2j2sGVFQyNU6+vuyLqUtf8=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["useState","useNavigate","useAuth","TextField","Button","Container","Typography","Box","Alert","jsxDEV","_jsxDEV","VerifyEmail","_s","email","setEmail","code","setCode","message","setMessage","error","setError","verifyEmail","navigate","handleSubmit","e","preventDefault","success","console","log","setTimeout","maxWidth","children","sx","mt","display","flexDirection","alignItems","component","variant","fileName","_jsxFileName","lineNumber","columnNumber","severity","width","onSubmit","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","type","inputProps","maxLength","mb","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/Desktop/CP/djr_auth_deep/auth-client/src/pages/VerifyEmail.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import { useNavigate, useSearchParams } from \"react-router-dom\";\r\n// import { useAuth } from \"../context/AuthContext\";\r\n// import {\r\n//   Container,\r\n//   Typography,\r\n//   Box,\r\n//   Button,\r\n//   CircularProgress,\r\n//   Alert,\r\n// } from \"@mui/material\";\r\n\r\n// const VerifyEmail = () => {\r\n//   const [searchParams] = useSearchParams();\r\n//   const token = searchParams.get(\"token\");\r\n//   const [status, setStatus] = useState(\"verifying\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const { verifyEmail } = useAuth();\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const verifyToken = async () => {\r\n//       try {\r\n//         const success = await verifyEmail(token);\r\n//         if (success) {\r\n//           setStatus(\"verified\");\r\n//         } else {\r\n//           setStatus(\"failed\");\r\n//           setError(\r\n//             \"Email verification failed. The link may be invalid or expired.\"\r\n//           );\r\n//         }\r\n//       } catch (err) {\r\n//         setStatus(\"failed\");\r\n//         setError(\"An error occurred during verification.\");\r\n//       }\r\n//     };\r\n\r\n//     if (token) {\r\n//       verifyToken();\r\n//     } else {\r\n//       setStatus(\"no-token\");\r\n//     }\r\n//   }, [token, verifyEmail]);\r\n\r\n//   if (status === \"verifying\") {\r\n//     return (\r\n//       <Container maxWidth=\"sm\">\r\n//         <Box\r\n//           sx={{\r\n//             mt: 8,\r\n//             display: \"flex\",\r\n//             flexDirection: \"column\",\r\n//             alignItems: \"center\",\r\n//           }}\r\n//         >\r\n//           <CircularProgress />\r\n//           <Typography variant=\"h6\" sx={{ mt: 2 }}>\r\n//             Verifying your email...\r\n//           </Typography>\r\n//         </Box>\r\n//       </Container>\r\n//     );\r\n//   }\r\n\r\n//   if (status === \"no-token\") {\r\n//     return (\r\n//       <Container maxWidth=\"sm\">\r\n//         <Box\r\n//           sx={{\r\n//             mt: 8,\r\n//             display: \"flex\",\r\n//             flexDirection: \"column\",\r\n//             alignItems: \"center\",\r\n//           }}\r\n//         >\r\n//           <Typography variant=\"h6\" sx={{ mt: 2 }}>\r\n//             No verification token provided.\r\n//           </Typography>\r\n//           <Button\r\n//             variant=\"contained\"\r\n//             sx={{ mt: 2 }}\r\n//             onClick={() => navigate(\"/login\")}\r\n//           >\r\n//             Go to Login\r\n//           </Button>\r\n//         </Box>\r\n//       </Container>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Container maxWidth=\"sm\">\r\n//       <Box\r\n//         sx={{\r\n//           mt: 8,\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//         }}\r\n//       >\r\n//         {status === \"verified\" ? (\r\n//           <>\r\n//             <Typography variant=\"h5\" sx={{ mt: 2 }}>\r\n//               Email Verified Successfully!\r\n//             </Typography>\r\n//             <Typography variant=\"body1\" sx={{ mt: 2 }}>\r\n//               Your email has been verified. You can now log in to your account.\r\n//             </Typography>\r\n//             <Button\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3 }}\r\n//               onClick={() => navigate(\"/login\")}\r\n//             >\r\n//               Go to Login\r\n//             </Button>\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             <Typography variant=\"h5\" color=\"error\" sx={{ mt: 2 }}>\r\n//               Verification Failed\r\n//             </Typography>\r\n//             {error && (\r\n//               <Alert severity=\"error\" sx={{ mt: 2, width: \"100%\" }}>\r\n//                 {error}\r\n//               </Alert>\r\n//             )}\r\n//             <Button\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3 }}\r\n//               onClick={() => navigate(\"/login\")}\r\n//             >\r\n//               Go to Login\r\n//             </Button>\r\n//           </>\r\n//         )}\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default VerifyEmail;\r\n\r\n\r\n\r\n\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { TextField, Button, Container, Typography, Box, Alert } from '@mui/material';\r\n\r\nconst VerifyEmail = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [code, setCode] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n    const { verifyEmail } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setMessage('');\r\n        \r\n        const success = await verifyEmail(email, code);\r\n        if (success) {\r\n          console.log('Email verified successfully!', success);\r\n            setMessage('Email verified successfully! Redirecting to login...');\r\n            setTimeout(() => navigate('/login'), 2000);\r\n        } else {\r\n            setError('Verification failed. Please check your code and try again.');\r\n            setError('Verification failed. Please check your code and try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <Box sx={{ mt: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Verify Email\r\n                </Typography>\r\n                {message && <Alert severity=\"success\" sx={{ width: '100%', mt: 2 }}>{message}</Alert>}\r\n                {error && <Alert severity=\"error\" sx={{ width: '100%', mt: 2 }}>{error}</Alert>}\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"code\"\r\n                        label=\"Verification Code\"\r\n                        type=\"text\"\r\n                        inputProps={{ maxLength: 6 }}\r\n                        value={code}\r\n                        onChange={(e) => setCode(e.target.value)}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                    >\r\n                        Verify Email\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default VerifyEmail;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}