{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Desktop\\\\CP\\\\djr_auth_deep\\\\auth-client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import { createContext, useContext, useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import jwt_decode from \"jwt-decode\";\n\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/auth/login/\", {\n        email,\n        password\n      });\n      const {\n        access,\n        refresh\n      } = response.data;\n      localStorage.setItem(\"token\", access);\n      localStorage.setItem(\"refreshToken\", refresh);\n      setToken(access);\n      const decoded = jwtDecode(access);\n      setUser(decoded);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response;\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n      await axios.post(\"http://127.0.0.1:8000/api/auth/logout/\", {\n        refresh_token: refreshToken\n      });\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"refreshToken\");\n      setToken(null);\n      setUser(null);\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    }\n  };\n  const register = async formData => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/auth/register/\", formData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        error: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n      };\n    }\n  };\n  const verifyEmail = async token => {\n    try {\n      await axios.get(`http://127.0.0.1:8000/api/auth/email-verify/?token=${token}`);\n      return true;\n    } catch (error) {\n      console.error(\"Email verification error:\", error);\n      return false;\n    }\n  };\n  const requestPasswordReset = async email => {\n    try {\n      await axios.post(\"http://127.0.0.1:8000/api/auth/request-reset-email/\", {\n        email\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Password reset request error:\", error);\n      return false;\n    }\n  };\n  const resetPassword = async (uidb64, token, password, password2) => {\n    try {\n      await axios.patch(\"http://127.0.0.1:8000/api/auth/password-reset-complete/\", {\n        uidb64,\n        token,\n        password,\n        password2\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Password reset error:\", error);\n      return false;\n    }\n  };\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        if (token) {\n          const decoded = jwtDecode(token);\n          setUser(decoded);\n\n          // Check if token is expired\n          const currentTime = Date.now() / 1000;\n          if (decoded.exp < currentTime) {\n            try {\n              const refreshToken = localStorage.getItem(\"refreshToken\");\n              const response = await axios.post(\"http://127.0.0.1:8000/api/token/refresh/\", {\n                refresh: refreshToken\n              });\n              const newAccessToken = response.data.access;\n              localStorage.setItem(\"token\", newAccessToken);\n              setToken(newAccessToken);\n              const newDecoded = jwtDecode(newAccessToken);\n              setUser(newDecoded);\n            } catch (refreshError) {\n              logout();\n            }\n          }\n        }\n      } catch (error) {\n        logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuth();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      isLoading,\n      login,\n      logout,\n      register,\n      verifyEmail,\n      requestPasswordReset,\n      resetPassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"kylruUOWvOZDu62eJe4UZJ6Nx1s=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","useNavigate","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isLoading","setIsLoading","navigate","login","email","password","response","post","access","refresh","data","setItem","decoded","success","error","_error$response","console","logout","refreshToken","refresh_token","removeItem","register","formData","_error$response2","verifyEmail","get","requestPasswordReset","resetPassword","uidb64","password2","patch","checkAuth","currentTime","Date","now","exp","newAccessToken","newDecoded","refreshError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/ahmed/Desktop/CP/djr_auth_deep/auth-client/src/context/AuthContext.js"],"sourcesContent":["// import { createContext, useContext, useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import jwt_decode from \"jwt-decode\";\r\n\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode'; \r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:8000/api/auth/login/\",\r\n        {\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n\r\n      const { access, refresh } = response.data;\r\n      localStorage.setItem(\"token\", access);\r\n      localStorage.setItem(\"refreshToken\", refresh);\r\n      setToken(access);\r\n\r\n      const decoded = jwtDecode(access);\r\n      setUser(decoded);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      return { success: false, error: error.response?.data };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const refreshToken = localStorage.getItem(\"refreshToken\");\r\n      await axios.post(\"http://127.0.0.1:8000/api/auth/logout/\", {\r\n        refresh_token: refreshToken,\r\n      });\r\n\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"refreshToken\");\r\n      setToken(null);\r\n      setUser(null);\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n    }\r\n  };\r\n\r\n  const register = async (formData) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:8000/api/auth/register/\",\r\n        formData\r\n      );\r\n      return { success: true, data: response.data, };\r\n    } catch (error) {\r\n      console.error(\"Registration error:\", error);\r\n      return { success: false, error: error.response?.data };\r\n    }\r\n  };\r\n\r\n  const verifyEmail = async (token) => {\r\n    try {\r\n      await axios.get(\r\n        `http://127.0.0.1:8000/api/auth/email-verify/?token=${token}`\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Email verification error:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const requestPasswordReset = async (email) => {\r\n    try {\r\n      await axios.post(\"http://127.0.0.1:8000/api/auth/request-reset-email/\", {\r\n        email,\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Password reset request error:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (uidb64, token, password, password2) => {\r\n    try {\r\n      await axios.patch(\r\n        \"http://127.0.0.1:8000/api/auth/password-reset-complete/\",\r\n        {\r\n          uidb64,\r\n          token,\r\n          password,\r\n          password2,\r\n        }\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Password reset error:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        if (token) {\r\n          const decoded = jwtDecode(token);\r\n          setUser(decoded);\r\n\r\n          // Check if token is expired\r\n          const currentTime = Date.now() / 1000;\r\n          if (decoded.exp < currentTime) {\r\n            try {\r\n              const refreshToken = localStorage.getItem(\"refreshToken\");\r\n              const response = await axios.post(\r\n                \"http://127.0.0.1:8000/api/token/refresh/\",\r\n                {\r\n                  refresh: refreshToken,\r\n                }\r\n              );\r\n\r\n              const newAccessToken = response.data.access;\r\n              localStorage.setItem(\"token\", newAccessToken);\r\n              setToken(newAccessToken);\r\n\r\n              const newDecoded = jwtDecode(newAccessToken);\r\n              setUser(newDecoded);\r\n            } catch (refreshError) {\r\n              logout();\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        logout();\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        isLoading,\r\n        login,\r\n        logout,\r\n        register,\r\n        verifyEmail,\r\n        requestPasswordReset,\r\n        resetPassword,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}