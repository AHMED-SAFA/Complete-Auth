{"ast":null,"code":"// import { useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import { useAuth } from \"../context/AuthContext\";\n// import {\n//   TextField,\n//   Button,\n//   Container,\n//   Typography,\n//   Box,\n//   Alert,\n//   CircularProgress,\n// } from \"@mui/material\";\n\n// const Register = () => {\n//   const [formData, setFormData] = useState({\n//     email: \"\",\n//     username: \"\",\n//     password: \"\",\n//     password2: \"\",\n//   });\n//   const [error, setError] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const { register } = useAuth();\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     setIsLoading(true);\n\n//     if (formData.password !== formData.password2) {\n//       setError(\"Passwords do not match\");\n//       setIsLoading(false);\n//       return;\n//     }\n\n//     try {\n//       const result = await register(formData);\n//       if (result.success) {\n//         navigate(\"/verify-email\", { state: { email: formData.email } });\n//         console.log(\"Registration successful\", result);\n//       } else {\n//         console.log(\"Registration error:\", result.error);\n//         setError(\n//           result.error?.email?.[0] ||\n//             result.error?.username?.[0] ||\n//             \"Registration failed. Please try again.\"\n//         );\n//       }\n//     } catch (err) {\n//       setError(\"An unexpected error occurred\");\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"xs\">\n//       <Box\n//         sx={{\n//           mt: 8,\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//         }}\n//       >\n//         <Typography component=\"h1\" variant=\"h5\">\n//           Sign up\n//         </Typography>\n\n//         {error && (\n//           <Alert severity=\"error\" sx={{ width: \"100%\", mt: 2 }}>\n//             {error}\n//           </Alert>\n//         )}\n\n//         {/* Regular Registration Form */}\n//         <Box\n//           component=\"form\"\n//           onSubmit={handleSubmit}\n//           sx={{ mt: 1, width: \"100%\" }}\n//         >\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             id=\"email\"\n//             label=\"Email Address\"\n//             name=\"email\"\n//             autoComplete=\"email\"\n//             autoFocus\n//             value={formData.email}\n//             onChange={handleChange}\n//           />\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             id=\"username\"\n//             label=\"Username\"\n//             name=\"username\"\n//             autoComplete=\"username\"\n//             value={formData.username}\n//             onChange={handleChange}\n//           />\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             name=\"password\"\n//             label=\"Password\"\n//             type=\"password\"\n//             id=\"password\"\n//             autoComplete=\"new-password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//           />\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             name=\"password2\"\n//             label=\"Confirm Password\"\n//             type=\"password\"\n//             id=\"password2\"\n//             autoComplete=\"new-password\"\n//             value={formData.password2}\n//             onChange={handleChange}\n//           />\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             sx={{ mt: 3, mb: 2 }}\n//             disabled={isLoading}\n//           >\n//             {isLoading ? (\n//               <>\n//                 <CircularProgress size={24} sx={{ mr: 1 }} color=\"inherit\" />\n//                 Signing Up...\n//               </>\n//             ) : (\n//               \"Sign Up\"\n//             )}\n//           </Button>\n//           <Box sx={{ textAlign: \"center\" }}>\n//             <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n//               <Typography variant=\"body2\" color=\"primary\">\n//                 Already have an account? Sign in\n//               </Typography>\n//             </Link>\n//           </Box>\n//         </Box>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default Register;","map":{"version":3,"names":[],"sources":["C:/Users/ahmed/Desktop/CP/New folder/auth-client/src/pages/Register.js"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import { useAuth } from \"../context/AuthContext\";\r\n// import {\r\n//   TextField,\r\n//   Button,\r\n//   Container,\r\n//   Typography,\r\n//   Box,\r\n//   Alert,\r\n//   CircularProgress,\r\n// } from \"@mui/material\";\r\n\r\n// const Register = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     email: \"\",\r\n//     username: \"\",\r\n//     password: \"\",\r\n//     password2: \"\",\r\n//   });\r\n//   const [error, setError] = useState(\"\");\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const { register } = useAuth();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n//     setIsLoading(true);\r\n\r\n//     if (formData.password !== formData.password2) {\r\n//       setError(\"Passwords do not match\");\r\n//       setIsLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const result = await register(formData);\r\n//       if (result.success) {\r\n//         navigate(\"/verify-email\", { state: { email: formData.email } });\r\n//         console.log(\"Registration successful\", result);\r\n//       } else {\r\n//         console.log(\"Registration error:\", result.error);\r\n//         setError(\r\n//           result.error?.email?.[0] ||\r\n//             result.error?.username?.[0] ||\r\n//             \"Registration failed. Please try again.\"\r\n//         );\r\n//       }\r\n//     } catch (err) {\r\n//       setError(\"An unexpected error occurred\");\r\n//       console.error(err);\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"xs\">\r\n//       <Box\r\n//         sx={{\r\n//           mt: 8,\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//         }}\r\n//       >\r\n//         <Typography component=\"h1\" variant=\"h5\">\r\n//           Sign up\r\n//         </Typography>\r\n\r\n//         {error && (\r\n//           <Alert severity=\"error\" sx={{ width: \"100%\", mt: 2 }}>\r\n//             {error}\r\n//           </Alert>\r\n//         )}\r\n\r\n//         {/* Regular Registration Form */}\r\n//         <Box\r\n//           component=\"form\"\r\n//           onSubmit={handleSubmit}\r\n//           sx={{ mt: 1, width: \"100%\" }}\r\n//         >\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             id=\"email\"\r\n//             label=\"Email Address\"\r\n//             name=\"email\"\r\n//             autoComplete=\"email\"\r\n//             autoFocus\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             id=\"username\"\r\n//             label=\"Username\"\r\n//             name=\"username\"\r\n//             autoComplete=\"username\"\r\n//             value={formData.username}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             name=\"password\"\r\n//             label=\"Password\"\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             autoComplete=\"new-password\"\r\n//             value={formData.password}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             name=\"password2\"\r\n//             label=\"Confirm Password\"\r\n//             type=\"password\"\r\n//             id=\"password2\"\r\n//             autoComplete=\"new-password\"\r\n//             value={formData.password2}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <Button\r\n//             type=\"submit\"\r\n//             fullWidth\r\n//             variant=\"contained\"\r\n//             sx={{ mt: 3, mb: 2 }}\r\n//             disabled={isLoading}\r\n//           >\r\n//             {isLoading ? (\r\n//               <>\r\n//                 <CircularProgress size={24} sx={{ mr: 1 }} color=\"inherit\" />\r\n//                 Signing Up...\r\n//               </>\r\n//             ) : (\r\n//               \"Sign Up\"\r\n//             )}\r\n//           </Button>\r\n//           <Box sx={{ textAlign: \"center\" }}>\r\n//             <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n//               <Typography variant=\"body2\" color=\"primary\">\r\n//                 Already have an account? Sign in\r\n//               </Typography>\r\n//             </Link>\r\n//           </Box>\r\n//         </Box>\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}