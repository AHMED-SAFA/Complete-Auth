{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Desktop\\\\CP\\\\djr_auth_deep\\\\auth-client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import { useAuth } from \"../context/AuthContext\";\n// import {\n//   TextField,\n//   Button,\n//   Container,\n//   Typography,\n//   Box,\n//   Alert,\n// } from \"@mui/material\";\n\n// const Register = () => {\n//   const [formData, setFormData] = useState({\n//     email: \"\",\n//     username: \"\",\n//     password: \"\",\n//     password2: \"\",\n//   });\n//   const [error, setError] = useState(\"\");\n//   const { register } = useAuth();\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n\n//     if (formData.password !== formData.password2) {\n//       setError(\"Passwords do not match\");\n//       return;\n//     }\n\n//     const result = await register(formData);\n//     if (result.success) {\n//       // navigate(\"/verify-email\");\n//       navigate('/verify-email', { state: { email: formData.email } });\n//       console.log(\"Registration successful\",result);\n//     } else {\n//       console.log(\"Registration error:\", result.error);\n//       setError(\n//         result.error?.email?.[0] ||\n//           result.error?.username?.[0] ||\n//           \"Registration failed. Please try again.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"xs\">\n//       <Box\n//         sx={{\n//           mt: 8,\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//         }}\n//       >\n//         <Typography component=\"h1\" variant=\"h5\">\n//           Sign up\n//         </Typography>\n//         {error && (\n//           <Alert severity=\"error\" sx={{ width: \"100%\", mt: 2 }}>\n//             {error}\n//           </Alert>\n//         )}\n//         <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             id=\"email\"\n//             label=\"Email Address\"\n//             name=\"email\"\n//             autoComplete=\"email\"\n//             autoFocus\n//             value={formData.email}\n//             onChange={handleChange}\n//           />\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             id=\"username\"\n//             label=\"Username\"\n//             name=\"username\"\n//             autoComplete=\"username\"\n//             value={formData.username}\n//             onChange={handleChange}\n//           />\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             name=\"password\"\n//             label=\"Password\"\n//             type=\"password\"\n//             id=\"password\"\n//             autoComplete=\"new-password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//           />\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             name=\"password2\"\n//             label=\"Confirm Password\"\n//             type=\"password\"\n//             id=\"password2\"\n//             autoComplete=\"new-password\"\n//             value={formData.password2}\n//             onChange={handleChange}\n//           />\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             sx={{ mt: 3, mb: 2 }}\n//           >\n//             Sign Up\n//           </Button>\n//           <Link to=\"/login\" variant=\"body2\">\n//             Already have an account? Sign in\n//           </Link>\n//         </Box>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default Register;\n\nimport { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { TextField, Button, Container, Typography, Box, Alert, Divider, CircularProgress } from \"@mui/material\";\nimport GoogleIcon from \"@mui/icons-material/Google\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGoogleLoading, setIsGoogleLoading] = useState(false);\n  const {\n    register,\n    loginWithGoogle\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n    if (formData.password !== formData.password2) {\n      setError(\"Passwords do not match\");\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const result = await register(formData);\n      if (result.success) {\n        navigate('/verify-email', {\n          state: {\n            email: formData.email\n          }\n        });\n        console.log(\"Registration successful\", result);\n      } else {\n        var _result$error, _result$error$email, _result$error2, _result$error2$userna;\n        console.log(\"Registration error:\", result.error);\n        setError(((_result$error = result.error) === null || _result$error === void 0 ? void 0 : (_result$error$email = _result$error.email) === null || _result$error$email === void 0 ? void 0 : _result$error$email[0]) || ((_result$error2 = result.error) === null || _result$error2 === void 0 ? void 0 : (_result$error2$userna = _result$error2.username) === null || _result$error2$userna === void 0 ? void 0 : _result$error2$userna[0]) || \"Registration failed. Please try again.\");\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred\");\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleGoogleSignUp = async () => {\n    setError(\"\");\n    setIsGoogleLoading(true);\n    try {\n      const result = await loginWithGoogle();\n      if (result.success) {\n        console.log(\"Google sign-up successful\");\n        navigate('/'); // Navigate to dashboard after successful Google login\n      } else {\n        setError(result.error || \"Google sign-up failed. Please try again.\");\n        console.error(\"Google sign-up error:\", result.error);\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred during Google sign-up\");\n      console.error(err);\n    } finally {\n      setIsGoogleLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          width: \"100%\",\n          mt: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"outlined\",\n        startIcon: isGoogleLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(GoogleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 73\n        }, this),\n        onClick: handleGoogleSignUp,\n        disabled: isGoogleLoading,\n        sx: {\n          mt: 3,\n          py: 1\n        },\n        children: isGoogleLoading ? \"Signing up...\" : \"Sign up with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'relative',\n          width: '100%',\n          my: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Divider, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 1,\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          label: \"Username\",\n          name: \"username\",\n          autoComplete: \"username\",\n          value: formData.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"new-password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password2\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          id: \"password2\",\n          autoComplete: \"new-password\",\n          value: formData.password2,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24,\n              sx: {\n                mr: 1\n              },\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), \"Signing Up...\"]\n          }, void 0, true) : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            style: {\n              textDecoration: 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"primary\",\n              children: \"Already have an account? Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"reV/Bs88+0uMqd9FUfGZrOdSJjA=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useNavigate","Link","useAuth","TextField","Button","Container","Typography","Box","Alert","Divider","CircularProgress","GoogleIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","formData","setFormData","email","username","password","password2","error","setError","isLoading","setIsLoading","isGoogleLoading","setIsGoogleLoading","register","loginWithGoogle","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","result","success","state","console","log","_result$error","_result$error$email","_result$error2","_result$error2$userna","err","handleGoogleSignUp","maxWidth","children","sx","mt","display","flexDirection","alignItems","component","variant","fileName","_jsxFileName","lineNumber","columnNumber","severity","width","fullWidth","startIcon","size","onClick","disabled","py","position","my","color","onSubmit","margin","required","id","label","autoComplete","autoFocus","onChange","type","mb","mr","textAlign","to","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/Desktop/CP/djr_auth_deep/auth-client/src/pages/Register.js"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import { useAuth } from \"../context/AuthContext\";\r\n// import {\r\n//   TextField,\r\n//   Button,\r\n//   Container,\r\n//   Typography,\r\n//   Box,\r\n//   Alert,\r\n// } from \"@mui/material\";\r\n\r\n// const Register = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     email: \"\",\r\n//     username: \"\",\r\n//     password: \"\",\r\n//     password2: \"\",\r\n//   });\r\n//   const [error, setError] = useState(\"\");\r\n//   const { register } = useAuth();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n\r\n//     if (formData.password !== formData.password2) {\r\n//       setError(\"Passwords do not match\");\r\n//       return;\r\n//     }\r\n\r\n//     const result = await register(formData);\r\n//     if (result.success) {\r\n//       // navigate(\"/verify-email\");\r\n//       navigate('/verify-email', { state: { email: formData.email } });\r\n//       console.log(\"Registration successful\",result);\r\n//     } else {\r\n//       console.log(\"Registration error:\", result.error);\r\n//       setError(\r\n//         result.error?.email?.[0] ||\r\n//           result.error?.username?.[0] ||\r\n//           \"Registration failed. Please try again.\"\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"xs\">\r\n//       <Box\r\n//         sx={{\r\n//           mt: 8,\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//         }}\r\n//       >\r\n//         <Typography component=\"h1\" variant=\"h5\">\r\n//           Sign up\r\n//         </Typography>\r\n//         {error && (\r\n//           <Alert severity=\"error\" sx={{ width: \"100%\", mt: 2 }}>\r\n//             {error}\r\n//           </Alert>\r\n//         )}\r\n//         <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             id=\"email\"\r\n//             label=\"Email Address\"\r\n//             name=\"email\"\r\n//             autoComplete=\"email\"\r\n//             autoFocus\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             id=\"username\"\r\n//             label=\"Username\"\r\n//             name=\"username\"\r\n//             autoComplete=\"username\"\r\n//             value={formData.username}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             name=\"password\"\r\n//             label=\"Password\"\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             autoComplete=\"new-password\"\r\n//             value={formData.password}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             name=\"password2\"\r\n//             label=\"Confirm Password\"\r\n//             type=\"password\"\r\n//             id=\"password2\"\r\n//             autoComplete=\"new-password\"\r\n//             value={formData.password2}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <Button\r\n//             type=\"submit\"\r\n//             fullWidth\r\n//             variant=\"contained\"\r\n//             sx={{ mt: 3, mb: 2 }}\r\n//           >\r\n//             Sign Up\r\n//           </Button>\r\n//           <Link to=\"/login\" variant=\"body2\">\r\n//             Already have an account? Sign in\r\n//           </Link>\r\n//         </Box>\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n\r\n\r\nimport { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Alert,\r\n  Divider,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isGoogleLoading, setIsGoogleLoading] = useState(false);\r\n  const { register, loginWithGoogle } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    if (formData.password !== formData.password2) {\r\n      setError(\"Passwords do not match\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await register(formData);\r\n      if (result.success) {\r\n        navigate('/verify-email', { state: { email: formData.email } });\r\n        console.log(\"Registration successful\", result);\r\n      } else {\r\n        console.log(\"Registration error:\", result.error);\r\n        setError(\r\n          result.error?.email?.[0] ||\r\n            result.error?.username?.[0] ||\r\n            \"Registration failed. Please try again.\"\r\n        );\r\n      }\r\n    } catch (err) {\r\n      setError(\"An unexpected error occurred\");\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignUp = async () => {\r\n    setError(\"\");\r\n    setIsGoogleLoading(true);\r\n    \r\n    try {\r\n      const result = await loginWithGoogle();\r\n      \r\n      if (result.success) {\r\n        console.log(\"Google sign-up successful\",);\r\n        navigate('/'); // Navigate to dashboard after successful Google login\r\n      } else {\r\n        setError(result.error || \"Google sign-up failed. Please try again.\");\r\n        console.error(\"Google sign-up error:\", result.error);\r\n      }\r\n    } catch (err) {\r\n      setError(\"An unexpected error occurred during Google sign-up\");\r\n      console.error(err);\r\n    } finally {\r\n      setIsGoogleLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Box\r\n        sx={{\r\n          mt: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ width: \"100%\", mt: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {/* Google Sign-up Button */}\r\n        <Button\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          startIcon={isGoogleLoading ? <CircularProgress size={20} /> : <GoogleIcon />}\r\n          onClick={handleGoogleSignUp}\r\n          disabled={isGoogleLoading}\r\n          sx={{ mt: 3, py: 1 }}\r\n        >\r\n          {isGoogleLoading ? \"Signing up...\" : \"Sign up with Google\"}\r\n        </Button>\r\n        \r\n        <Box sx={{ position: 'relative', width: '100%', my: 3 }}>\r\n          <Divider>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              OR\r\n            </Typography>\r\n          </Divider>\r\n        </Box>\r\n        \r\n        {/* Regular Registration Form */}\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1, width: '100%' }}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"new-password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password2\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            id=\"password2\"\r\n            autoComplete=\"new-password\"\r\n            value={formData.password2}\r\n            onChange={handleChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <>\r\n                <CircularProgress size={24} sx={{ mr: 1 }} color=\"inherit\" />\r\n                Signing Up...\r\n              </>\r\n            ) : (\r\n              \"Sign Up\"\r\n            )}\r\n          </Button>\r\n          <Box sx={{ textAlign: 'center' }}>\r\n            <Link to=\"/login\" style={{ textDecoration: 'none' }}>\r\n              <Typography variant=\"body2\" color=\"primary\">\r\n                Already have an account? Sign in\r\n              </Typography>\r\n            </Link>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}