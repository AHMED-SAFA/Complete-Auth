{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Desktop\\\\CP\\\\djr_auth_deep\\\\auth-client\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { TextField, Button, Container, Typography, Box, Alert } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    uidb64,\n    token\n  } = useParams();\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const {\n    resetPassword\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setMessage(\"\");\n    if (password !== password2) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    const success = await resetPassword(uidb64, token, password, password2);\n    if (success) {\n      setMessage(\"Password reset successfully. You can now login with your new password.\");\n      console.log(\"Password reset successful\", success);\n      setTimeout(() => navigate(\"/login\"), 3000);\n    } else {\n      console.log;\n      setError(\"Password reset failed. The link may be invalid or expired.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          width: \"100%\",\n          mt: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          width: \"100%\",\n          mt: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"New Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"new-password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password2\",\n          label: \"Confirm New Password\",\n          type: \"password\",\n          id: \"password2\",\n          autoComplete: \"new-password\",\n          value: password2,\n          onChange: e => setPassword2(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"mzdl5gVnu63xp85oX0SUoNil1FU=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useState","useNavigate","useParams","useAuth","TextField","Button","Container","Typography","Box","Alert","jsxDEV","_jsxDEV","ResetPassword","_s","uidb64","token","password","setPassword","password2","setPassword2","message","setMessage","error","setError","resetPassword","navigate","handleSubmit","e","preventDefault","success","console","log","setTimeout","maxWidth","children","sx","mt","display","flexDirection","alignItems","component","variant","fileName","_jsxFileName","lineNumber","columnNumber","severity","width","onSubmit","margin","required","fullWidth","name","label","type","id","autoComplete","value","onChange","target","mb","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/Desktop/CP/djr_auth_deep/auth-client/src/pages/ResetPassword.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Alert,\r\n} from \"@mui/material\";\r\n\r\nconst ResetPassword = () => {\r\n  const { uidb64, token } = useParams();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const { resetPassword } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n\r\n    if (password !== password2) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    const success = await resetPassword(uidb64, token, password, password2);\r\n    if (success) {\r\n      setMessage(\r\n        \"Password reset successfully. You can now login with your new password.\"\r\n      );\r\n      console.log(\"Password reset successful\", success);\r\n      setTimeout(() => navigate(\"/login\"), 3000);\r\n    } else {\r\n      console.log\r\n      setError(\"Password reset failed. The link may be invalid or expired.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Box\r\n        sx={{\r\n          mt: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Reset Password\r\n        </Typography>\r\n        {message && (\r\n          <Alert severity=\"success\" sx={{ width: \"100%\", mt: 2 }}>\r\n            {message}\r\n          </Alert>\r\n        )}\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ width: \"100%\", mt: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"new-password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password2\"\r\n            label=\"Confirm New Password\"\r\n            type=\"password\"\r\n            id=\"password2\"\r\n            autoComplete=\"new-password\"\r\n            value={password2}\r\n            onChange={(e) => setPassword2(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}